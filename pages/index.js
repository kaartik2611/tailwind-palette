import Head from "next/head";
import React from "react";
// import Colors from "../components/Colors";
import { createObject } from "../utils/data";
import StateContext from "../context/stateContext";

export default function Home({ res }) {
  const [success, setSuccess] = React.useState(false);
  const { state } = React.useContext(StateContext);
  React.useEffect(() => {
    const bmz = setTimeout(() => {
      setSuccess(false);
    }, 1000);

    return () => {
      clearTimeout(bmz);
    };
  }, [success]);

  return (
    <>
      <Head>
        <title>Tailwind Palette</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Colors res={res} /> */}
      <div className="flex flex-col">
        <div className="flex flex-row justify-center">
          {res.map((color, i) => (
            <div key={`${color}-${i}`} className="flex flex-col-reverse">
              {color.colors.map((c, j) => (
                <div
                  onClick={() => {
                    if (state === "CSS") {
                      navigator.clipboard.writeText(c.name);
                    } else if (state === "HEX") {
                      navigator.clipboard.writeText(c.hex);
                    }
                    setSuccess(true);
                  }}
                  key={c.name}
                  className="w-[3.3rem] h-[3.3rem] cursor-pointer"
                  style={{
                    backgroundColor: c.hex,
                    color: `${res[i].colors[9 - j].hex}`,
                    borderTopLeftRadius: `${j === 9 && "15%"}`,
                    borderTopRightRadius: `${j === 9 && "15%"}`,
                    borderBottomLeftRadius: `${j === 0 && "15%"}`,
                    borderBottomRightRadius: `${j === 0 && "15%"}`,
                  }}
                >
                  <p className="opacity-0 hover:opacity-100 p-4 font-bold">
                    {c.name.split("-")[1]}
                  </p>
                </div>
              ))}
              <p className="text-center my-auto w-[4.1rem] tracking-[-0.05em] uppercase pb-3">
                {color.name}
              </p>
            </div>
          ))}
        </div>
        <div>
          {success && (
            <p className="text-xl font-semibold pt-3 text-center transition-all delay-75">
              Copied to Clipboard!
            </p>
          )}
        </div>
      </div>
    </>
  );
}
export async function getStaticProps() {
  const res = await createObject();
  return {
    props: { res },
  };
}
